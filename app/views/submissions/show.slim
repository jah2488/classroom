.row
  .col.m4
    h1 = link_to submission.assignment.title, submission.assignment
.row
  .col.m3= link_to student_path(submission.student) do
    .chip
      = image_tag submission.student.avatar_url
      = submission.student.pretty_name
  .col.m3
    strong
      ' Due:
    = react_time submission.assignment.due_date
  .col.m3
    strong
      ' Turned In:
    = react_time submission.created_at
  .col.m3
    .chip = submission.label
    - if submission.late
      .chip Late
.row
  .col.m6.s12
    - if policy(submission).edit?
      = react_component('EditSubmission', submission: submission)
    - else
      = react_component('Submission', submission: submission)
  - submission.ratings.each_with_index do |rating, index|
    - if rating.has_feedback?
      .col.m6.s12
        .card.grey.lighten-5
          .card-content.black-text
            = rating.created_at.in_time_zone(submission.tz).strftime("%l:%M%P %Z, %m/%e")
            - if current_user.instructor?
              = react_component('EditRating', rating: rating)
            - else
              = react_md(rating.notes)
- if current_user.instructor?
  = react_component('GradeSubmissionForm', { badges: Badge.all.map { |badge| badge.as_hash(self) }, submissionID: submission.id, nextForStudent: next_submission_url_for_student(submission), nextForAssignment: next_submission_url_for_assignment(submission)})
